# font_family      MonoLisa-Medium
# font_family      MonoLisa
# bold_font        MonoLisa-Bold
# italic_font      MonoLisa-MediumItalic
# bold_italic_font MonoLisa-BoldItalic
font_family      JetBrainsMono NF
# bold_font        JetBrainsMono Bold
# italic_font      MonoLisa-MediumItalic
# bold_italic_font MonoLisa-BoldItalic
# font_family      InputMono
# bold_font        InputMono Medium
# italic_font      InputMono Italic
# bold_italic_font InputMono MediumIta
# font_family      Berkeley Mono
# bold_font        Berkeley Mono Bold
# italic_font      Berkeley Mono Italic
# bold_italic_font Berkeley Mono Bold Italic

font_size 14

cursor_shape block
cursor_beam_thickness 1.5

window_padding_width 4
include themes/theme.conf
enable_audio_bell no
copy_on_select a1

allow_remote_control yes
listen_on unix:@mykitty

# enabled_layouts splits,stack
enabled_layouts tall,fat,grid,stack

# Tab styles
tab_bar_min_tabs            2
tab_bar_edge                bottom
tab_bar_style               powerline
tab_powerline_style         slanted
tab_title_template          {title}{' :{}:'.format(num_windows) if num_windows > 1 else ''}

kitty_mod alt

map shift+super+t new_os_window_with_cwd
map kitty_mod+n new_window_with_cwd

# Until I change my keyboard functions to consider context (paste is ctrl-v everywhere)
map ctrl+shift+c copy_to_clipboard
map ctrl+shift+v paste_from_clipboard

### Tab management
# map kitty_mod+page_down   next_tab
map ctrl+tab              next_tab
# map kitty_mod+page_up     previous_tab
map ctrl+shift+tab        previous_tab

map kitty_mod+.   move_tab_forward
map kitty_mod+,   move_tab_backward

map kitty_mod+t   new_tab
map kitty_mod+w   close_tab
map kitty_mod+x scroll_to_prompt -1  # jump to previous
map kitty_mod+w scroll_to_prompt 1   # jump to next

map kitty_mod+b   layout_action bias 50 62 70
map kitty_mod+z combine : toggle_layout stack : scroll_prompt_to_bottom
map kitty_mod+l next_layout
map kitty_mod+shift+l next_layout -1

map kitty_mod+f2 edit_config_file
map kitty_mod+f5 load_config_file

map kitty_mod+p kitten meow/projects.py load --dir $HOME/dev/

### nvim connector
map ctrl+j kitten pass_keys.py bottom ctrl+j
map ctrl+k kitten pass_keys.py top    ctrl+k
map ctrl+h kitten pass_keys.py left   ctrl+h
map ctrl+l kitten pass_keys.py right  ctrl+l

# map kitty_mod+down kitten pass_keys.py bottom alt+down
# map kitty_mod+up kitten pass_keys.py top    alt+up
# map kitty_mod+left kitten pass_keys.py left   alt+left
# map kitty_mod+right kitten pass_keys.py right  alt+right

# Create a new "manage windows" mode (mw)
map --new-mode mw kitty_mod+m

# Switch focus to the neighboring window in the indicated direction using arrow keys
map --mode mw left neighboring_window left
map --mode mw right neighboring_window right
map --mode mw up neighboring_window up
map --mode mw down neighboring_window down

# Move the active window in the indicated direction
map --mode mw shift+up move_window up
map --mode mw shift+left move_window left
map --mode mw shift+right move_window right
map --mode mw shift+down move_window down

# Move the active window to the indicated screen edge
map --mode mw ctrl+shift+up layout_action move_to_screen_edge top
map --mode mw ctrl+shift+left layout_action move_to_screen_edge left
map --mode mw ctrl+shift+right layout_action move_to_screen_edge right
map --mode mw ctrl+shift+down layout_action move_to_screen_edge bottom

# Resize the active window
map --mode mw n resize_window narrower
map --mode mw w resize_window wider
map --mode mw t resize_window taller
map --mode mw s resize_window shorter
map --mode mw r layout_action rotate

# Exit the manage window mode
map --mode mw esc pop_keyboard_mode

include theme.conf
# vim:fileencoding=utf-8:foldmethod=marker
