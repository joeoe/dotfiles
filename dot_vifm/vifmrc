" Editor
set vicmd=vim

" This makes vifm perform file operations on its own instead of relying on
" standard utilities like `cp`.  While using `cp` and alike is a more universal
" solution, it's also much slower when processing large amounts of files and
" doesn't support progress measuring.
set syscalls

" Trash Directory
set trash

set nofollowlinks
set history=100
set undolevels=100

" Natural sort of (version) numbers within text.
set sortnumbers

set vimhelp
set norunexec
colorscheme iceberg
set timefmt=%d-%m-%Y\ %H:%M
set wildmenu
set wildstyle=popup
set suggestoptions=normal,visual,view,otherpane,keys,marks,registers
set ignorecase
set smartcase
set nohlsearch
set incsearch
set scrolloff=6
set statusline=" %A %10u:%-7g %-15s %-30d"
"set findprg="fd --type f --hidden --exclude .git"
"set locateprg="fd --type f --hidden --exclude .git %a"
nnoremap // :locate<space>
"screen!

" ------------------------------------------------------------------------------

mark d ~/dotfiles/
mark h ~/

" ------------------------------------------------------------------------------

" :com[mand][!] command_name action
" The following macros can be used in a command
" %a is replaced with the user arguments.
" %c the current file under the cursor.
" %C the current file under the cursor in the other directory.
" %f the current selected file, or files.
" %F the current selected file, or files in the other directory.
" %b same as %f %F.
" %d the current directory name.
" %D the other window directory name.
" %m run the command in a menu window

command! df df -h %m 2> /dev/null
command! diff vim -d %f %F
command! zip zip -r %f.zip %f
command! run !! ./%f
command! make !!make %a
command! take :mkdir %a | cd %a
command! vgrep vim "+grep %a"
command! reload :write | restart

" largest N, newest N, most recently commited N files
command! xs :set viewcolumns=*{name}..,8{size}|   zzzInternalXS %a
command! xm :set viewcolumns=*{name}..,24{mtime}| zzzInternalXM %a
command! xc :set viewcolumns=*{name}..,24{mtime}| zzzInternalXC %a
command! zzzInternalXS find -type f -print0 | xargs -0 ls -Sr | tail -%a | tac %U
command! zzzInternalXM find -type f -print0 | xargs -0 ls -tr | tail -%a | tac %U
command! zzzInternalXC git log --name-only --format=%%n -- %d| CDUP=`git rev-parse --show-cdup` perl -lne 'print if /./ and s(^)($ENV{CDUP}) and -f and not $seen{$_}++' | head -%a %U
" the 'zzz' is so they will show up last when I hit ':<Tab>'
" also, notice the %% in the format paramater in zzzInternalXC

" FZF fun
" command! FZFlocate :set noquickview | :execute 'goto "'.system('locate $HOME | fzf --height 10 2>/dev/tty ').'"%IU' | redraw
" command! FZFfind :set noquickview | :execute 'goto "'.system('find | fzf --height 10 2>/dev/tty ').'"%IU' | redraw
" command! fzf :execute '!fzf 2>&0 %%IU' | normal! gf

" ------------------------------------------------------------------------------
" Filetypes

" Pdf
filextype *.pdf 
    \ zathura %c %i &, 
    \ apvlv %c, 
    \ xpdf %c
    \ pdftotext -nopgbrk %c -,
fileviewer *.pdf 
    \ vifmimg pdfpreview %px %py %pw %ph %c
    \ %pc
    \ vifmimg clear,

filextype *.epub ebook-viewer %c
fileviewer *.epub 
    \ vifmimg epubpreview %px %py %pw %ph %c
    \ %pc
    \ vifmimg clear

" PostScript
filextype *.ps,*.eps,*.ps.gz
        \ {View in zathura}
        \ zathura %f,
        \ {View in gv}
        \ gv %c %i &,

" Djvu
filextype *.djvu
        \ {View in zathura}
        \ zathura %f,
        \ {View in apvlv}
        \ apvlv %f,

" Mango
filextype *.cbz,*.cb7,*.cbr
        \ {View in ahoviewer}
        \ ahoviewer %f &,
        \ {View in zathura}
        \ zathura %f &,

" Audio
filetype *.wav,*.mp3,*.flac,*.m4a,*.wma,*.ape,*.ac3,*.og[agx],*.spx,*.opus
       \ {Play using mpv}
       \ mpv --no-video %c,
       \ {Play using mpv in tmux split}
       \ tmux split-window -hd "mpv --no-video %c" &,
       \ {Play using ffplay}
       \ ffplay -nodisp -autoexit %c,
       \ {Play using MPlayer}
       \ mplayer %f,
fileviewer *.mp3 mp3info
fileviewer *.flac soxi

"nnoremap <space>ts :!

" Video
filextype *.avi,*.mp4,*.wmv,*.dat,*.3gp,*.ogv,*.mkv,*.mpg,*.mpeg,*.vob,
         \*.fl[icv],*.m2v,*.mov,*.webm,*.ts,*.mts,*.m4v,*.r[am],*.qt,*.divx,
         \*.as[fx]
        \ {View using mpv}
        \ mpv --quiet %f &,
        \ {View using ffplay}
        \ ffplay -fs -autoexit %f &,
fileviewer *.avi,*.mp4,*.wmv,*.dat,*.3gp,*.ogv,*.mkv,*.mpg,*.mpeg,*.vob,
        \*.fl[icv],*.m2v,*.mov,*.webm,*.ts,*.mts,*.m4v,*.r[am],*.qt,*.divx,
        \*.as[fx]
        \ vifmimg videopreview %px %py %pw %ph %c
        \ %pc
        \ vifmimg clear,
        \ ffprobe -hide_banner -pretty %c 2>&1

" Web
filextype *.html,*.htm
        \ {Open with dwb}
        \ qutebrowser %f &,
        \ {Open with firefox}
        \ firefox %f &,
        \ {Open with uzbl}
        \ uzbl-browser %f %i &,
filetype *.html,*.htm links, lynx

" Object
filetype *.o nm %f | less

" Man page
filetype *.[1-8] man ./%c
fileviewer *.[1-8] man ./%c | col -b

" Images
filextype *.bmp,*.jpg,*.jpeg,*.png,*.gif,*.xpm
        \ {View in feh}
        \ feh -T def --start-at %c,
" fileviewer *.bmp,*.jpg,*.jpeg,*.png,*.gif,*.xpm
"         \ convert -identify %f -verbose /dev/null
fileviewer *.bmp,*.jpg,*.jpeg,*.png
        \ vifmimg draw %px %py %pw %ph %c
        \ %pc
        \ vifmimg clear

fileviewer *.gif
        \ vifmimg gifpreview %px %py %pw %ph %c
        \ %pc
        \ vifmimg clear

" MD5
filetype *.md5
       \ {Check MD5 hash sum}
       \ md5sum -c %f %S,

" SHA1
filetype *.sha1
       \ {Check SHA1 hash sum}
       \ sha1sum -c %f %S,

" SHA256
filetype *.sha256
       \ {Check SHA256 hash sum}
       \ sha256sum -c %f %S,

" SHA512
filetype *.sha512
       \ {Check SHA512 hash sum}
       \ sha512sum -c %f %S,

" GPG signature
filetype *.asc
       \ {Check signature}
       \ !!gpg --verify %c,

" FuseZipMount
filetype *.zip,*.jar,*.war,*.ear,*.oxt,*.apkg
       \ {Mount with fuse-zip}
       \ FUSE_MOUNT|fuse-zip %SOURCE_FILE %DESTINATION_DIR,
       \ {Extract with unzip}
       \ unzip -d %c:r %c,
       \ {View contents}
       \ zip -sf %c | less,
       \ {Extract here}
       \ tar -xf %c,
fileviewer *.zip,*.jar,*.war,*.ear,*.oxt zip -sf %c

" ArchiveMount
filetype *.tar,*.tar.bz2,*.tbz2,*.tgz,*.tar.gz,*.tar.xz,*.txz
       \ {Mount with archivemount}
       \ FUSE_MOUNT|archivemount %SOURCE_FILE %DESTINATION_DIR,
fileviewer *.tgz,*.tar.gz tar -tzf %c
fileviewer *.tar.bz2,*.tbz2 tar -tjf %c
fileviewer *.tar.txz,*.txz xz --list %c
fileviewer *.tar tar -tf %c

" Rar2FsMount and rar archives
filetype *.rar
       \ {Mount with rar2fs}
       \ FUSE_MOUNT|rar2fs %SOURCE_FILE %DESTINATION_DIR,
fileviewer *.rar unrar v %c

" IsoMount
filetype *.iso
       \ {Mount with fuseiso}
       \ FUSE_MOUNT|fuseiso %SOURCE_FILE %DESTINATION_DIR,

" SshMount
filetype *.ssh
       \ {Mount with sshfs}
       \ FUSE_MOUNT2|sshfs %PARAM %DESTINATION_DIR %FOREGROUND,

" FtpMount
filetype *.ftp
       \ {Mount with curlftpfs}
       \ FUSE_MOUNT2|curlftpfs -o ftp_port=-,,disable_eprt %PARAM %DESTINATION_DIR %FOREGROUND,

" Fuse7z and 7z archives
filetype *.7z
       \ {Mount with fuse-7z}
       \ FUSE_MOUNT|fuse-7z %SOURCE_FILE %DESTINATION_DIR,
fileviewer *.7z 7z l %c

" Office files
filextype *.odt,*.doc,*.docx,*.xls,*.xlsx,*.odp,*.pptx libreoffice %f &
fileviewer *.doc catdoc %c
fileviewer *.docx docx2txt.pl %f -

" TuDu files
filetype *.tudu tudu -f %c

" Qt projects
filextype *.pro qtcreator %f &

" Directories
filextype */
        \ {View in thunar}
        \ Thunar %f &,

" Syntax highlighting in preview
"
" Explicitly set highlight type for some extensions
"
" 256-color terminal
" fileviewer *.[ch],*.[ch]pp highlight -O xterm256 -s dante --syntax c %c
" fileviewer Makefile,Makefile.* highlight -O xterm256 -s dante --syntax make %c
"
" 16-color terminal
" fileviewer *.c,*.h highlight -O ansi -s dante %c
"
" Or leave it for automatic detection
"
" fileviewer *[^/] pygmentize -O style=monokai -f console256 -g

" Displaying pictures in terminal
"
" fileviewer *.jpg,*.png shellpic %c

" Open all other files with default system programs (you can also remove all
" :file[x]type commands above to ensure they don't interfere with system-wide
" settings).  By default all unknown files are opened with 'vi[x]cmd'
" uncommenting one of lines below will result in ignoring 'vi[x]cmd' option
" for unknown file types.
" For *nix:
" filetype * xdg-open
" For OS X:
" filetype * open
" For Windows:
" filetype * start, explorer

" ------------------------------------------------------------------------------

" What should be saved automatically between vifm runs
" Like in previous versions of vifm
" set vifminfo=options,filetypes,commands,bookmarks,dhistory,state,cs
" Like in vi
set vifminfo=dhistory,chistory,state,tui,
    \phistory,fhistory,dirstack,registers,bookmarks,bmarks

" ------------------------------------------------------------------------------

" Examples of configuring both panels

" Customize view columns a bit (enable ellipsis for truncated file names)
"
" set viewcolumns=-{name}..,6{}.

" Filter-out build and temporary files
"
filter /^.*\.(lo|o|d|class)$|.*~$|^tags$/
" filter! /^.*\.(lo|o|d|class)$|.*~$/


" ------------------------------------------------------------------------------
nnoremap <space> <nop>

" Start shell in current directory
nnoremap s :shell<cr>

" Sorting
nnoremap <c-s> :sort<cr>
nnoremap S :set sort=<tab><s-tab>
nnoremap <space>sc :set sort=-ctime,-dir<cr>
nnoremap <space>si :invert o<cr>

" Toggle visibility of preview window
nnoremap w :view<cr>
vnoremap w :view<cr>gv

" Open file in the background using its default program
nnoremap gb :file &<cr>l

" yank selected file info; d:dir, f:filepath, F:file, r:fileroot
nnoremap yd :!echo %d | xclip -selection clipboard %i<cr>
nnoremap yF :!echo -ne %c | xclip -selection clipboard %i<cr>
nnoremap yf :!echo -ne %c:p | xclip -selection clipboard %i<cr>
nnoremap yr :!echo -ne %c:r | xclip -selection clipboard %i<cr>

" Mappings for faster renaming; ce: change to ext, cc: change full name
nnoremap I cw<c-a>
nnoremap A cw
nnoremap cc cw<c-u>
nnoremap ce cW<c-u>

nnoremap cd :cd<space>
nnoremap c. :cd . .<cr>

" Open editor to edit vifmrc and apply settings after returning to vifm
nnoremap <F8> :write | edit $MYVIFMRC | restart<cr>

"nnoremap <space>t :!st &<cr>
nnoremap <space>q :quit<cr>
"nnoremap <space>m :mpvdir<cr>

noremap <space>m :move &<cr>
noremap <space>c :copy &<cr>


" git log preview
nnoremap gl :if &previewprg == '' | set previewprg='git log --color -- %c 2>&1' | view! | else | set previewprg='' | view | endif<cr>

" ------------------------------------------------------------------------------

"set grepprg='rg --line-number %i %a %s'

""" Block particular shortcut
" nnoremap <left> <nop>
